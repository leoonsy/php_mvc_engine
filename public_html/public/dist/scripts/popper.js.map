{"version":3,"sources":["scripts/popper.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","global","factory","exports","module","define","amd","Popper","this","isBrowser","window","document","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","indexOf","debounce","Promise","fn","called","resolve","then","scheduled","setTimeout","isFunction","functionToCheck","toString","call","getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","isOffsetContainer","element1root","getScroll","upperSide","arguments","undefined","html","scrollingElement","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","createClass","Constructor","protoProps","staticProps","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","value","_extends","assign","source","hasOwnProperty","getClientRect","offsets","right","left","bottom","top","getBoundingClientRect","rect","scrollTop","scrollLeft","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","_ref","getArea","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","runModifiers","modifiers","data","ends","slice","prop","findIndex","cur","match","forEach","console","warn","enabled","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","getWindow","setupEventListeners","options","updateBound","addEventListener","passive","scrollElement","attachToScrollParents","event","callback","scrollParents","isBody","push","eventsEnabled","disableEventListeners","cancelAnimationFrame","scheduleUpdate","removeEventListener","removeEventListeners","isNumeric","n","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","str","toValue","index2","Defaults","positionFixed","removeOnDestroy","onCreate","onUpdate","shift","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","preventOverflow","instance","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","min","keepTogether","floor","opSide","arrow","_data$offsets$arrow","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","round","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","inner","subtractLength","hide","bound","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","shouldRound","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","setAttribute","removeAttribute","setAttributes","onLoad","modifierOptions","isDestroyed","isCreated","removeChild","_this","TypeError","classCallCheck","requestAnimationFrame","update","bind","jquery","enableEventListeners","Utils","PopperUtils"],"mappings":"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","file":"popper.js","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**!\r\n * @fileOverview Kickass library to create and place poppers near their reference elements.\r\n * @version 1.15.0\r\n * @license\r\n * Copyright (c) 2016 Federico Zivolo and contributors\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Popper = factory();\n})(this, function () {\n  'use strict';\n\n  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  var timeoutDuration = 0;\n\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      timeoutDuration = 1;\n      break;\n    }\n  }\n\n  function microtaskDebounce(fn) {\n    var called = false;\n    return function () {\n      if (called) {\n        return;\n      }\n\n      called = true;\n      window.Promise.resolve().then(function () {\n        called = false;\n        fn();\n      });\n    };\n  }\n\n  function taskDebounce(fn) {\n    var scheduled = false;\n    return function () {\n      if (!scheduled) {\n        scheduled = true;\n        setTimeout(function () {\n          scheduled = false;\n          fn();\n        }, timeoutDuration);\n      }\n    };\n  }\n\n  var supportsMicroTasks = isBrowser && window.Promise;\n  /**\r\n  * Create a debounced version of a method, that's asynchronously deferred\r\n  * but called in the minimum time possible.\r\n  *\r\n  * @method\r\n  * @memberof Popper.Utils\r\n  * @argument {Function} fn\r\n  * @returns {Function}\r\n  */\n\n  var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n  /**\r\n   * Check if the given variable is a function\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Any} functionToCheck - variable to check\r\n   * @returns {Boolean} answer to: is a function?\r\n   */\n\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n  }\n  /**\r\n   * Get CSS computed property of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Eement} element\r\n   * @argument {String} property\r\n   */\n\n\n  function getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n      return [];\n    } // NOTE: 1 DOM access here\n\n\n    var window = element.ownerDocument.defaultView;\n    var css = window.getComputedStyle(element, null);\n    return property ? css[property] : css;\n  }\n  /**\r\n   * Returns the parentNode or the host of the element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} parent\r\n   */\n\n\n  function getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n      return element;\n    }\n\n    return element.parentNode || element.host;\n  }\n  /**\r\n   * Returns the scrolling parent of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} scroll parent\r\n   */\n\n\n  function getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element) {\n      return document.body;\n    }\n\n    switch (element.nodeName) {\n      case 'HTML':\n      case 'BODY':\n        return element.ownerDocument.body;\n\n      case '#document':\n        return element.body;\n    } // Firefox want us to check `-x` and `-y` variations as well\n\n\n    var _getStyleComputedProp = getStyleComputedProperty(element),\n        overflow = _getStyleComputedProp.overflow,\n        overflowX = _getStyleComputedProp.overflowX,\n        overflowY = _getStyleComputedProp.overflowY;\n\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n      return element;\n    }\n\n    return getScrollParent(getParentNode(element));\n  }\n\n  var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\n  var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n  /**\r\n   * Determines if the browser is Internet Explorer\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Number} version to check\r\n   * @returns {Boolean} isIE\r\n   */\n\n  function isIE(version) {\n    if (version === 11) {\n      return isIE11;\n    }\n\n    if (version === 10) {\n      return isIE10;\n    }\n\n    return isIE11 || isIE10;\n  }\n  /**\r\n   * Returns the offset parent of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} offset parent\r\n   */\n\n\n  function getOffsetParent(element) {\n    if (!element) {\n      return document.documentElement;\n    }\n\n    var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here\n\n    var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent\n\n    while (offsetParent === noOffsetParent && element.nextElementSibling) {\n      offsetParent = (element = element.nextElementSibling).offsetParent;\n    }\n\n    var nodeName = offsetParent && offsetParent.nodeName;\n\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n      return element ? element.ownerDocument.documentElement : document.documentElement;\n    } // .offsetParent will return the closest TH, TD or TABLE in case\n    // no offsetParent is present, I hate this job...\n\n\n    if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n      return getOffsetParent(offsetParent);\n    }\n\n    return offsetParent;\n  }\n\n  function isOffsetContainer(element) {\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY') {\n      return false;\n    }\n\n    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n  }\n  /**\r\n   * Finds the root node (document, shadowDOM root) of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} node\r\n   * @returns {Element} root node\r\n   */\n\n\n  function getRoot(node) {\n    if (node.parentNode !== null) {\n      return getRoot(node.parentNode);\n    }\n\n    return node;\n  }\n  /**\r\n   * Finds the offset parent common to the two provided nodes\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element1\r\n   * @argument {Element} element2\r\n   * @returns {Element} common offset parent\r\n   */\n\n\n  function findCommonOffsetParent(element1, element2) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n      return document.documentElement;\n    } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n\n    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n    var start = order ? element1 : element2;\n    var end = order ? element2 : element1; // Get common ancestor container\n\n    var range = document.createRange();\n    range.setStart(start, 0);\n    range.setEnd(end, 0);\n    var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document\n\n    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n      if (isOffsetContainer(commonAncestorContainer)) {\n        return commonAncestorContainer;\n      }\n\n      return getOffsetParent(commonAncestorContainer);\n    } // one of the nodes is inside shadowDOM, find which one\n\n\n    var element1root = getRoot(element1);\n\n    if (element1root.host) {\n      return findCommonOffsetParent(element1root.host, element2);\n    } else {\n      return findCommonOffsetParent(element1, getRoot(element2).host);\n    }\n  }\n  /**\r\n   * Gets the scroll value of the given element in the given side (top and left)\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @argument {String} side `top` or `left`\r\n   * @returns {number} amount of scrolled pixels\r\n   */\n\n\n  function getScroll(element) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      var html = element.ownerDocument.documentElement;\n      var scrollingElement = element.ownerDocument.scrollingElement || html;\n      return scrollingElement[upperSide];\n    }\n\n    return element[upperSide];\n  }\n  /*\r\n   * Sum or subtract the element scroll values (left and top) from a given rect object\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Object} rect - Rect object you want to change\r\n   * @param {HTMLElement} element - The element from the function reads the scroll values\r\n   * @param {Boolean} subtract - set to true if you want to subtract the scroll values\r\n   * @return {Object} rect - The modifier rect object\r\n   */\n\n\n  function includeScroll(rect, element) {\n    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var scrollTop = getScroll(element, 'top');\n    var scrollLeft = getScroll(element, 'left');\n    var modifier = subtract ? -1 : 1;\n    rect.top += scrollTop * modifier;\n    rect.bottom += scrollTop * modifier;\n    rect.left += scrollLeft * modifier;\n    rect.right += scrollLeft * modifier;\n    return rect;\n  }\n  /*\r\n   * Helper to detect borders of a given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {CSSStyleDeclaration} styles\r\n   * Result of `getStyleComputedProperty` on the given element\r\n   * @param {String} axis - `x` or `y`\r\n   * @return {number} borders - The borders size of the given axis\r\n   */\n\n\n  function getBordersSize(styles, axis) {\n    var sideA = axis === 'x' ? 'Left' : 'Top';\n    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n    return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n  }\n\n  function getSize(axis, body, html, computedStyle) {\n    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n  }\n\n  function getWindowSizes(document) {\n    var body = document.body;\n    var html = document.documentElement;\n    var computedStyle = isIE(10) && getComputedStyle(html);\n    return {\n      height: getSize('Height', body, html, computedStyle),\n      width: getSize('Width', body, html, computedStyle)\n    };\n  }\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var defineProperty = function defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  /**\r\n   * Given element offsets, generate an output similar to getBoundingClientRect\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Object} offsets\r\n   * @returns {Object} ClientRect like output\r\n   */\n\n\n  function getClientRect(offsets) {\n    return _extends({}, offsets, {\n      right: offsets.left + offsets.width,\n      bottom: offsets.top + offsets.height\n    });\n  }\n  /**\r\n   * Get bounding client rect of given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {HTMLElement} element\r\n   * @return {Object} client rect\r\n   */\n\n\n  function getBoundingClientRect(element) {\n    var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n\n    try {\n      if (isIE(10)) {\n        rect = element.getBoundingClientRect();\n        var scrollTop = getScroll(element, 'top');\n        var scrollLeft = getScroll(element, 'left');\n        rect.top += scrollTop;\n        rect.left += scrollLeft;\n        rect.bottom += scrollTop;\n        rect.right += scrollLeft;\n      } else {\n        rect = element.getBoundingClientRect();\n      }\n    } catch (e) {}\n\n    var result = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    }; // subtract scrollbar size from sizes\n\n    var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n    var width = sizes.width || element.clientWidth || result.right - result.left;\n    var height = sizes.height || element.clientHeight || result.bottom - result.top;\n    var horizScrollbar = element.offsetWidth - width;\n    var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n\n    if (horizScrollbar || vertScrollbar) {\n      var styles = getStyleComputedProperty(element);\n      horizScrollbar -= getBordersSize(styles, 'x');\n      vertScrollbar -= getBordersSize(styles, 'y');\n      result.width -= horizScrollbar;\n      result.height -= vertScrollbar;\n    }\n\n    return getClientRect(result);\n  }\n\n  function getOffsetRectRelativeToArbitraryNode(children, parent) {\n    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var isIE10 = isIE(10);\n    var isHTML = parent.nodeName === 'HTML';\n    var childrenRect = getBoundingClientRect(children);\n    var parentRect = getBoundingClientRect(parent);\n    var scrollParent = getScrollParent(children);\n    var styles = getStyleComputedProperty(parent);\n    var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n    var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n    if (fixedPosition && isHTML) {\n      parentRect.top = Math.max(parentRect.top, 0);\n      parentRect.left = Math.max(parentRect.left, 0);\n    }\n\n    var offsets = getClientRect({\n      top: childrenRect.top - parentRect.top - borderTopWidth,\n      left: childrenRect.left - parentRect.left - borderLeftWidth,\n      width: childrenRect.width,\n      height: childrenRect.height\n    });\n    offsets.marginTop = 0;\n    offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n    // we do this only on HTML because it's the only element that behaves\n    // differently when margins are applied to it. The margins are included in\n    // the box of the documentElement, in the other cases not.\n\n    if (!isIE10 && isHTML) {\n      var marginTop = parseFloat(styles.marginTop, 10);\n      var marginLeft = parseFloat(styles.marginLeft, 10);\n      offsets.top -= borderTopWidth - marginTop;\n      offsets.bottom -= borderTopWidth - marginTop;\n      offsets.left -= borderLeftWidth - marginLeft;\n      offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them\n\n      offsets.marginTop = marginTop;\n      offsets.marginLeft = marginLeft;\n    }\n\n    if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n      offsets = includeScroll(offsets, parent);\n    }\n\n    return offsets;\n  }\n\n  function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var html = element.ownerDocument.documentElement;\n    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n    var width = Math.max(html.clientWidth, window.innerWidth || 0);\n    var height = Math.max(html.clientHeight, window.innerHeight || 0);\n    var scrollTop = !excludeScroll ? getScroll(html) : 0;\n    var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n    var offset = {\n      top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n      left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n      width: width,\n      height: height\n    };\n    return getClientRect(offset);\n  }\n  /**\r\n   * Check if the given element is fixed or is inside a fixed parent\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @argument {Element} customContainer\r\n   * @returns {Boolean} answer to \"isFixed?\"\r\n   */\n\n\n  function isFixed(element) {\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      return false;\n    }\n\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n      return true;\n    }\n\n    var parentNode = getParentNode(element);\n\n    if (!parentNode) {\n      return false;\n    }\n\n    return isFixed(parentNode);\n  }\n  /**\r\n   * Finds the first parent of an element that has a transformed property defined\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} first transformed parent or documentElement\r\n   */\n\n\n  function getFixedPositionOffsetParent(element) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element || !element.parentElement || isIE()) {\n      return document.documentElement;\n    }\n\n    var el = element.parentElement;\n\n    while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n      el = el.parentElement;\n    }\n\n    return el || document.documentElement;\n  }\n  /**\r\n   * Computed the boundaries limits and return them\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {HTMLElement} popper\r\n   * @param {HTMLElement} reference\r\n   * @param {number} padding\r\n   * @param {HTMLElement} boundariesElement - Element used to define the boundaries\r\n   * @param {Boolean} fixedPosition - Is in fixed position mode\r\n   * @returns {Object} Coordinates of the boundaries\r\n   */\n\n\n  function getBoundaries(popper, reference, padding, boundariesElement) {\n    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here\n\n    var boundaries = {\n      top: 0,\n      left: 0\n    };\n    var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference); // Handle viewport case\n\n    if (boundariesElement === 'viewport') {\n      boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n    } else {\n      // Handle other cases based on DOM element used as boundaries\n      var boundariesNode = void 0;\n\n      if (boundariesElement === 'scrollParent') {\n        boundariesNode = getScrollParent(getParentNode(reference));\n\n        if (boundariesNode.nodeName === 'BODY') {\n          boundariesNode = popper.ownerDocument.documentElement;\n        }\n      } else if (boundariesElement === 'window') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      } else {\n        boundariesNode = boundariesElement;\n      }\n\n      var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n      if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n        var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n            height = _getWindowSizes.height,\n            width = _getWindowSizes.width;\n\n        boundaries.top += offsets.top - offsets.marginTop;\n        boundaries.bottom = height + offsets.top;\n        boundaries.left += offsets.left - offsets.marginLeft;\n        boundaries.right = width + offsets.left;\n      } else {\n        // for all the other DOM elements, this one is good\n        boundaries = offsets;\n      }\n    } // Add paddings\n\n\n    padding = padding || 0;\n    var isPaddingNumber = typeof padding === 'number';\n    boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n    boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n    boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n    boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n    return boundaries;\n  }\n\n  function getArea(_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return width * height;\n  }\n  /**\r\n   * Utility used to transform the `auto` placement to the placement with more\r\n   * available space.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n\n  function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    if (placement.indexOf('auto') === -1) {\n      return placement;\n    }\n\n    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n    var rects = {\n      top: {\n        width: boundaries.width,\n        height: refRect.top - boundaries.top\n      },\n      right: {\n        width: boundaries.right - refRect.right,\n        height: boundaries.height\n      },\n      bottom: {\n        width: boundaries.width,\n        height: boundaries.bottom - refRect.bottom\n      },\n      left: {\n        width: refRect.left - boundaries.left,\n        height: boundaries.height\n      }\n    };\n    var sortedAreas = Object.keys(rects).map(function (key) {\n      return _extends({\n        key: key\n      }, rects[key], {\n        area: getArea(rects[key])\n      });\n    }).sort(function (a, b) {\n      return b.area - a.area;\n    });\n    var filteredAreas = sortedAreas.filter(function (_ref2) {\n      var width = _ref2.width,\n          height = _ref2.height;\n      return width >= popper.clientWidth && height >= popper.clientHeight;\n    });\n    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n    var variation = placement.split('-')[1];\n    return computedPlacement + (variation ? '-' + variation : '');\n  }\n  /**\r\n   * Get offsets to the reference element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Object} state\r\n   * @param {Element} popper - the popper element\r\n   * @param {Element} reference - the reference element (the popper will be relative to this)\r\n   * @param {Element} fixedPosition - is in fixed position mode\r\n   * @returns {Object} An object containing the offsets which will be applied to the popper\r\n   */\n\n\n  function getReferenceOffsets(state, popper, reference) {\n    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n  }\n  /**\r\n   * Get the outer sizes of the given element (offset size + margins)\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Object} object containing width and height properties\r\n   */\n\n\n  function getOuterSizes(element) {\n    var window = element.ownerDocument.defaultView;\n    var styles = window.getComputedStyle(element);\n    var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n    var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n    var result = {\n      width: element.offsetWidth + y,\n      height: element.offsetHeight + x\n    };\n    return result;\n  }\n  /**\r\n   * Get the opposite placement of the given one\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} placement\r\n   * @returns {String} flipped placement\r\n   */\n\n\n  function getOppositePlacement(placement) {\n    var hash = {\n      left: 'right',\n      right: 'left',\n      bottom: 'top',\n      top: 'bottom'\n    };\n    return placement.replace(/left|right|bottom|top/g, function (matched) {\n      return hash[matched];\n    });\n  }\n  /**\r\n   * Get offsets to the popper\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Object} position - CSS position the Popper will get applied\r\n   * @param {HTMLElement} popper - the popper element\r\n   * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\r\n   * @param {String} placement - one of the valid placement options\r\n   * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\r\n   */\n\n\n  function getPopperOffsets(popper, referenceOffsets, placement) {\n    placement = placement.split('-')[0]; // Get popper node sizes\n\n    var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object\n\n    var popperOffsets = {\n      width: popperRect.width,\n      height: popperRect.height\n    }; // depending by the popper placement we have to compute its offsets slightly differently\n\n    var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    var mainSide = isHoriz ? 'top' : 'left';\n    var secondarySide = isHoriz ? 'left' : 'top';\n    var measurement = isHoriz ? 'height' : 'width';\n    var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n\n    if (placement === secondarySide) {\n      popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n    } else {\n      popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n    }\n\n    return popperOffsets;\n  }\n  /**\r\n   * Mimics the `find` method of Array\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Array} arr\r\n   * @argument prop\r\n   * @argument value\r\n   * @returns index or -1\r\n   */\n\n\n  function find(arr, check) {\n    // use native find if supported\n    if (Array.prototype.find) {\n      return arr.find(check);\n    } // use `filter` to obtain the same behavior of `find`\n\n\n    return arr.filter(check)[0];\n  }\n  /**\r\n   * Return the index of the matching object\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Array} arr\r\n   * @argument prop\r\n   * @argument value\r\n   * @returns index or -1\r\n   */\n\n\n  function findIndex(arr, prop, value) {\n    // use native findIndex if supported\n    if (Array.prototype.findIndex) {\n      return arr.findIndex(function (cur) {\n        return cur[prop] === value;\n      });\n    } // use `find` + `indexOf` if `findIndex` isn't supported\n\n\n    var match = find(arr, function (obj) {\n      return obj[prop] === value;\n    });\n    return arr.indexOf(match);\n  }\n  /**\r\n   * Loop trough the list of modifiers and run them in order,\r\n   * each of them will then edit the data object.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {dataObject} data\r\n   * @param {Array} modifiers\r\n   * @param {String} ends - Optional modifier name used as stopper\r\n   * @returns {dataObject}\r\n   */\n\n\n  function runModifiers(modifiers, data, ends) {\n    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n    modifiersToRun.forEach(function (modifier) {\n      if (modifier['function']) {\n        // eslint-disable-line dot-notation\n        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n      }\n\n      var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n\n      if (modifier.enabled && isFunction(fn)) {\n        // Add properties to offsets to make them a complete clientRect object\n        // we do this before each modifier to make sure the previous one doesn't\n        // mess with these values\n        data.offsets.popper = getClientRect(data.offsets.popper);\n        data.offsets.reference = getClientRect(data.offsets.reference);\n        data = fn(data, modifier);\n      }\n    });\n    return data;\n  }\n  /**\r\n   * Updates the position of the popper, computing the new offsets and applying\r\n   * the new style.<br />\r\n   * Prefer `scheduleUpdate` over `update` because of performance reasons.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n\n\n  function update() {\n    // if popper is destroyed, don't perform any further update\n    if (this.state.isDestroyed) {\n      return;\n    }\n\n    var data = {\n      instance: this,\n      styles: {},\n      arrowStyles: {},\n      attributes: {},\n      flipped: false,\n      offsets: {}\n    }; // compute reference element offsets\n\n    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n\n    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`\n\n    data.originalPlacement = data.placement;\n    data.positionFixed = this.options.positionFixed; // compute the popper offsets\n\n    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n    data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers\n\n    data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback\n    // the other ones will call `onUpdate` callback\n\n    if (!this.state.isCreated) {\n      this.state.isCreated = true;\n      this.options.onCreate(data);\n    } else {\n      this.options.onUpdate(data);\n    }\n  }\n  /**\r\n   * Helper used to know if the given modifier is enabled.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @returns {Boolean}\r\n   */\n\n\n  function isModifierEnabled(modifiers, modifierName) {\n    return modifiers.some(function (_ref) {\n      var name = _ref.name,\n          enabled = _ref.enabled;\n      return enabled && name === modifierName;\n    });\n  }\n  /**\r\n   * Get the prefixed supported property name\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} property (camelCase)\r\n   * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\r\n   */\n\n\n  function getSupportedPropertyName(property) {\n    var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n    for (var i = 0; i < prefixes.length; i++) {\n      var prefix = prefixes[i];\n      var toCheck = prefix ? '' + prefix + upperProp : property;\n\n      if (typeof document.body.style[toCheck] !== 'undefined') {\n        return toCheck;\n      }\n    }\n\n    return null;\n  }\n  /**\r\n   * Destroys the popper.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n\n\n  function destroy() {\n    this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled\n\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n      this.popper.removeAttribute('x-placement');\n      this.popper.style.position = '';\n      this.popper.style.top = '';\n      this.popper.style.left = '';\n      this.popper.style.right = '';\n      this.popper.style.bottom = '';\n      this.popper.style.willChange = '';\n      this.popper.style[getSupportedPropertyName('transform')] = '';\n    }\n\n    this.disableEventListeners(); // remove the popper if user explicity asked for the deletion on destroy\n    // do not use `remove` because IE11 doesn't support it\n\n    if (this.options.removeOnDestroy) {\n      this.popper.parentNode.removeChild(this.popper);\n    }\n\n    return this;\n  }\n  /**\r\n   * Get the window associated with the element\r\n   * @argument {Element} element\r\n   * @returns {Window}\r\n   */\n\n\n  function getWindow(element) {\n    var ownerDocument = element.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  function attachToScrollParents(scrollParent, event, callback, scrollParents) {\n    var isBody = scrollParent.nodeName === 'BODY';\n    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n    target.addEventListener(event, callback, {\n      passive: true\n    });\n\n    if (!isBody) {\n      attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n    }\n\n    scrollParents.push(target);\n  }\n  /**\r\n   * Setup needed event listeners used to update the popper position\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @private\r\n   */\n\n\n  function setupEventListeners(reference, options, state, updateBound) {\n    // Resize event listener on window\n    state.updateBound = updateBound;\n    getWindow(reference).addEventListener('resize', state.updateBound, {\n      passive: true\n    }); // Scroll event listener on scroll parents\n\n    var scrollElement = getScrollParent(reference);\n    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n    state.scrollElement = scrollElement;\n    state.eventsEnabled = true;\n    return state;\n  }\n  /**\r\n   * It will add resize/scroll events and start recalculating\r\n   * position of the popper element when they are triggered.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n\n\n  function enableEventListeners() {\n    if (!this.state.eventsEnabled) {\n      this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n    }\n  }\n  /**\r\n   * Remove event listeners used to update the popper position\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @private\r\n   */\n\n\n  function removeEventListeners(reference, state) {\n    // Remove resize event listener on window\n    getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents\n\n    state.scrollParents.forEach(function (target) {\n      target.removeEventListener('scroll', state.updateBound);\n    }); // Reset state\n\n    state.updateBound = null;\n    state.scrollParents = [];\n    state.scrollElement = null;\n    state.eventsEnabled = false;\n    return state;\n  }\n  /**\r\n   * It will remove resize/scroll events and won't recalculate popper position\r\n   * when they are triggered. It also won't trigger `onUpdate` callback anymore,\r\n   * unless you call `update` method manually.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n\n\n  function disableEventListeners() {\n    if (this.state.eventsEnabled) {\n      cancelAnimationFrame(this.scheduleUpdate);\n      this.state = removeEventListeners(this.reference, this.state);\n    }\n  }\n  /**\r\n   * Tells if a given input is a number\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {*} input to check\r\n   * @return {Boolean}\r\n   */\n\n\n  function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  /**\r\n   * Set the style to the given popper\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element - Element to apply the style to\r\n   * @argument {Object} styles\r\n   * Object with a list of properties and values which will be applied to the element\r\n   */\n\n\n  function setStyles(element, styles) {\n    Object.keys(styles).forEach(function (prop) {\n      var unit = ''; // add unit if the value is numeric and is one of the following\n\n      if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n        unit = 'px';\n      }\n\n      element.style[prop] = styles[prop] + unit;\n    });\n  }\n  /**\r\n   * Set the attributes to the given popper\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element - Element to apply the attributes to\r\n   * @argument {Object} styles\r\n   * Object with a list of properties and values which will be applied to the element\r\n   */\n\n\n  function setAttributes(element, attributes) {\n    Object.keys(attributes).forEach(function (prop) {\n      var value = attributes[prop];\n\n      if (value !== false) {\n        element.setAttribute(prop, attributes[prop]);\n      } else {\n        element.removeAttribute(prop);\n      }\n    });\n  }\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} data.styles - List of style properties - values to apply to popper element\r\n   * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The same data object\r\n   */\n\n\n  function applyStyle(data) {\n    // any property present in `data.styles` will be applied to the popper,\n    // in this way we can make the 3rd party modifiers add custom styles to it\n    // Be aware, modifiers could override the properties defined in the previous\n    // lines of this modifier!\n    setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,\n    // they will be set as HTML attributes of the element\n\n    setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties\n\n    if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n      setStyles(data.arrowElement, data.arrowStyles);\n    }\n\n    return data;\n  }\n  /**\r\n   * Set the x-placement attribute before everything else because it could be used\r\n   * to add margins to the popper margins needs to be calculated to get the\r\n   * correct popper offsets.\r\n   * @method\r\n   * @memberof Popper.modifiers\r\n   * @param {HTMLElement} reference - The reference element used to position the popper\r\n   * @param {HTMLElement} popper - The HTML element used as popper\r\n   * @param {Object} options - Popper.js options\r\n   */\n\n\n  function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n    // compute reference element offsets\n    var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n\n    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n    popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because\n    // without the position applied we can't guarantee correct computations\n\n    setStyles(popper, {\n      position: options.positionFixed ? 'fixed' : 'absolute'\n    });\n    return options;\n  }\n  /**\r\n   * @function\r\n   * @memberof Popper.Utils\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Boolean} shouldRound - If the offsets should be rounded at all\r\n   * @returns {Object} The popper's position offsets rounded\r\n   *\r\n   * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\r\n   * good as it can be within reason.\r\n   * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\r\n   *\r\n   * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\r\n   * as well on High DPI screens).\r\n   *\r\n   * Firefox prefers no rounding for positioning and does not have blurriness on\r\n   * high DPI screens.\r\n   *\r\n   * Only horizontal placement and left/right values need to be considered.\r\n   */\n\n\n  function getRoundedOffsets(data, shouldRound) {\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var round = Math.round,\n        floor = Math.floor;\n\n    var noRound = function noRound(v) {\n      return v;\n    };\n\n    var referenceWidth = round(reference.width);\n    var popperWidth = round(popper.width);\n    var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n    var isVariation = data.placement.indexOf('-') !== -1;\n    var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n    var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n    var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n    var verticalToInteger = !shouldRound ? noRound : round;\n    return {\n      left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n      top: verticalToInteger(popper.top),\n      bottom: verticalToInteger(popper.bottom),\n      right: horizontalToInteger(popper.right)\n    };\n  }\n\n  var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n  function computeStyle(data, options) {\n    var x = options.x,\n        y = options.y;\n    var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2\n\n    var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'applyStyle';\n    }).gpuAcceleration;\n\n    if (legacyGpuAccelerationOption !== undefined) {\n      console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n    }\n\n    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n    var offsetParent = getOffsetParent(data.instance.popper);\n    var offsetParentRect = getBoundingClientRect(offsetParent); // Styles\n\n    var styles = {\n      position: popper.position\n    };\n    var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n    var sideA = x === 'bottom' ? 'top' : 'bottom';\n    var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,\n    //  we use `translate3d` to apply the position to the popper we\n    // automatically use the supported prefixed version if needed\n\n    var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)\n    // If the content of the popper grows once it's been positioned, it\n    // may happen that the popper gets misplaced because of the new content\n    // overflowing its reference element\n    // To avoid this problem, we provide two options (x and y), which allow\n    // the consumer to define the offset origin.\n    // If we position a popper on top of a reference element, we can set\n    // `x` to `top` to make the popper grow towards its top instead of\n    // its bottom.\n\n    var left = void 0,\n        top = void 0;\n\n    if (sideA === 'bottom') {\n      // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n      // and not the bottom of the html element\n      if (offsetParent.nodeName === 'HTML') {\n        top = -offsetParent.clientHeight + offsets.bottom;\n      } else {\n        top = -offsetParentRect.height + offsets.bottom;\n      }\n    } else {\n      top = offsets.top;\n    }\n\n    if (sideB === 'right') {\n      if (offsetParent.nodeName === 'HTML') {\n        left = -offsetParent.clientWidth + offsets.right;\n      } else {\n        left = -offsetParentRect.width + offsets.right;\n      }\n    } else {\n      left = offsets.left;\n    }\n\n    if (gpuAcceleration && prefixedProperty) {\n      styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n      styles[sideA] = 0;\n      styles[sideB] = 0;\n      styles.willChange = 'transform';\n    } else {\n      // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n      var invertTop = sideA === 'bottom' ? -1 : 1;\n      var invertLeft = sideB === 'right' ? -1 : 1;\n      styles[sideA] = top * invertTop;\n      styles[sideB] = left * invertLeft;\n      styles.willChange = sideA + ', ' + sideB;\n    } // Attributes\n\n\n    var attributes = {\n      'x-placement': data.placement\n    }; // Update `data` attributes, styles and arrowStyles\n\n    data.attributes = _extends({}, attributes, data.attributes);\n    data.styles = _extends({}, styles, data.styles);\n    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n    return data;\n  }\n  /**\r\n   * Helper used to know if the given modifier depends from another one.<br />\r\n   * It checks if the needed modifier is listed and enabled.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Array} modifiers - list of modifiers\r\n   * @param {String} requestingName - name of requesting modifier\r\n   * @param {String} requestedName - name of requested modifier\r\n   * @returns {Boolean}\r\n   */\n\n\n  function isModifierRequired(modifiers, requestingName, requestedName) {\n    var requesting = find(modifiers, function (_ref) {\n      var name = _ref.name;\n      return name === requestingName;\n    });\n    var isRequired = !!requesting && modifiers.some(function (modifier) {\n      return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n    });\n\n    if (!isRequired) {\n      var _requesting = '`' + requestingName + '`';\n\n      var requested = '`' + requestedName + '`';\n      console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n    }\n\n    return isRequired;\n  }\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n\n  function arrow(data, options) {\n    var _data$offsets$arrow; // arrow depends on keepTogether in order to work\n\n\n    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n      return data;\n    }\n\n    var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector\n\n    if (typeof arrowElement === 'string') {\n      arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier\n\n      if (!arrowElement) {\n        return data;\n      }\n    } else {\n      // if the arrowElement isn't a query selector we must check that the\n      // provided DOM node is child of its popper node\n      if (!data.instance.popper.contains(arrowElement)) {\n        console.warn('WARNING: `arrow.element` must be child of its popper element!');\n        return data;\n      }\n    }\n\n    var placement = data.placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n    var len = isVertical ? 'height' : 'width';\n    var sideCapitalized = isVertical ? 'Top' : 'Left';\n    var side = sideCapitalized.toLowerCase();\n    var altSide = isVertical ? 'left' : 'top';\n    var opSide = isVertical ? 'bottom' : 'right';\n    var arrowElementSize = getOuterSizes(arrowElement)[len]; //\n    // extends keepTogether behavior making sure the popper and its\n    // reference have enough pixels in conjunction\n    //\n    // top/left side\n\n    if (reference[opSide] - arrowElementSize < popper[side]) {\n      data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n    } // bottom/right side\n\n\n    if (reference[side] + arrowElementSize > popper[opSide]) {\n      data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n    }\n\n    data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper\n\n    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets\n    // take popper margin in account because we don't have this info available\n\n    var css = getStyleComputedProperty(data.instance.popper);\n    var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper\n\n    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n    data.arrowElement = arrowElement;\n    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n    return data;\n  }\n  /**\r\n   * Get the opposite placement variation of the given one\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} placement variation\r\n   * @returns {String} flipped placement variation\r\n   */\n\n\n  function getOppositeVariation(variation) {\n    if (variation === 'end') {\n      return 'start';\n    } else if (variation === 'start') {\n      return 'end';\n    }\n\n    return variation;\n  }\n  /**\r\n   * List of accepted placements to use as values of the `placement` option.<br />\r\n   * Valid placements are:\r\n   * - `auto`\r\n   * - `top`\r\n   * - `right`\r\n   * - `bottom`\r\n   * - `left`\r\n   *\r\n   * Each placement can have a variation from this list:\r\n   * - `-start`\r\n   * - `-end`\r\n   *\r\n   * Variations are interpreted easily if you think of them as the left to right\r\n   * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\r\n   * is right.<br />\r\n   * Vertically (`left` and `right`), `start` is top and `end` is bottom.\r\n   *\r\n   * Some valid examples are:\r\n   * - `top-end` (on top of reference, right aligned)\r\n   * - `right-start` (on right of reference, top aligned)\r\n   * - `bottom` (on bottom, centered)\r\n   * - `auto-end` (on the side with more space available, alignment depends by placement)\r\n   *\r\n   * @static\r\n   * @type {Array}\r\n   * @enum {String}\r\n   * @readonly\r\n   * @method placements\r\n   * @memberof Popper\r\n   */\n\n\n  var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`\n\n  var validPlacements = placements.slice(3);\n  /**\r\n   * Given an initial placement, returns all the subsequent placements\r\n   * clockwise (or counter-clockwise).\r\n   *\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} placement - A valid placement (it accepts variations)\r\n   * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\r\n   * @returns {Array} placements including their variations\r\n   */\n\n  function clockwise(placement) {\n    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var index = validPlacements.indexOf(placement);\n    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n    return counter ? arr.reverse() : arr;\n  }\n\n  var BEHAVIORS = {\n    FLIP: 'flip',\n    CLOCKWISE: 'clockwise',\n    COUNTERCLOCKWISE: 'counterclockwise'\n  };\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n  function flip(data, options) {\n    // if `inner` modifier is enabled, we can't use the `flip` modifier\n    if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n      return data;\n    }\n\n    if (data.flipped && data.placement === data.originalPlacement) {\n      // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n      return data;\n    }\n\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n    var placement = data.placement.split('-')[0];\n    var placementOpposite = getOppositePlacement(placement);\n    var variation = data.placement.split('-')[1] || '';\n    var flipOrder = [];\n\n    switch (options.behavior) {\n      case BEHAVIORS.FLIP:\n        flipOrder = [placement, placementOpposite];\n        break;\n\n      case BEHAVIORS.CLOCKWISE:\n        flipOrder = clockwise(placement);\n        break;\n\n      case BEHAVIORS.COUNTERCLOCKWISE:\n        flipOrder = clockwise(placement, true);\n        break;\n\n      default:\n        flipOrder = options.behavior;\n    }\n\n    flipOrder.forEach(function (step, index) {\n      if (placement !== step || flipOrder.length === index + 1) {\n        return data;\n      }\n\n      placement = data.placement.split('-')[0];\n      placementOpposite = getOppositePlacement(placement);\n      var popperOffsets = data.offsets.popper;\n      var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here\n\n      var floor = Math.floor;\n      var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n      var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n      var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n      var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n      var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n      var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n      var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries\n\n      var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries\n\n      var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n      var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n      if (overlapsRef || overflowsBoundaries || flippedVariation) {\n        // this boolean to detect any flip loop\n        data.flipped = true;\n\n        if (overlapsRef || overflowsBoundaries) {\n          placement = flipOrder[index + 1];\n        }\n\n        if (flippedVariation) {\n          variation = getOppositeVariation(variation);\n        }\n\n        data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with\n        // any additional property we may add in the future\n\n        data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n        data = runModifiers(data.instance.modifiers, data, 'flip');\n      }\n    });\n    return data;\n  }\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n\n  function keepTogether(data) {\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var placement = data.placement.split('-')[0];\n    var floor = Math.floor;\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var side = isVertical ? 'right' : 'bottom';\n    var opSide = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    if (popper[side] < floor(reference[opSide])) {\n      data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n    }\n\n    if (popper[opSide] > floor(reference[side])) {\n      data.offsets.popper[opSide] = floor(reference[side]);\n    }\n\n    return data;\n  }\n  /**\r\n   * Converts a string containing value + unit into a px value number\r\n   * @function\r\n   * @memberof {modifiers~offset}\r\n   * @private\r\n   * @argument {String} str - Value + unit string\r\n   * @argument {String} measurement - `height` or `width`\r\n   * @argument {Object} popperOffsets\r\n   * @argument {Object} referenceOffsets\r\n   * @returns {Number|String}\r\n   * Value in pixels, or original string if no values were extracted\r\n   */\n\n\n  function toValue(str, measurement, popperOffsets, referenceOffsets) {\n    // separate value from unit\n    var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n    var value = +split[1];\n    var unit = split[2]; // If it's not a number it's an operator, I guess\n\n    if (!value) {\n      return str;\n    }\n\n    if (unit.indexOf('%') === 0) {\n      var element = void 0;\n\n      switch (unit) {\n        case '%p':\n          element = popperOffsets;\n          break;\n\n        case '%':\n        case '%r':\n        default:\n          element = referenceOffsets;\n      }\n\n      var rect = getClientRect(element);\n      return rect[measurement] / 100 * value;\n    } else if (unit === 'vh' || unit === 'vw') {\n      // if is a vh or vw, we calculate the size based on the viewport\n      var size = void 0;\n\n      if (unit === 'vh') {\n        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n      } else {\n        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n      }\n\n      return size / 100 * value;\n    } else {\n      // if is an explicit pixel unit, we get rid of the unit and keep the value\n      // if is an implicit unit, it's px, and we return just the value\n      return value;\n    }\n  }\n  /**\r\n   * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\r\n   * @function\r\n   * @memberof {modifiers~offset}\r\n   * @private\r\n   * @argument {String} offset\r\n   * @argument {Object} popperOffsets\r\n   * @argument {Object} referenceOffsets\r\n   * @argument {String} basePlacement\r\n   * @returns {Array} a two cells array with x and y offsets in numbers\r\n   */\n\n\n  function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n    var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width\n    // in this way the first offset will use an axis and the second one\n    // will use the other one\n\n    var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands\n    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n\n    var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n      return frag.trim();\n    }); // Detect if the offset string contains a pair of values or a single one\n    // they could be separated by comma or space\n\n    var divider = fragments.indexOf(find(fragments, function (frag) {\n      return frag.search(/,|\\s/) !== -1;\n    }));\n\n    if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n      console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n    } // If divider is found, we divide the list of values and operands to divide\n    // them by ofset X and Y.\n\n\n    var splitRegex = /\\s*,\\s*|\\s+/;\n    var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations\n\n    ops = ops.map(function (op, index) {\n      // Most of the units rely on the orientation of the popper\n      var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n      var mergeWithPrevious = false;\n      return op // This aggregates any `+` or `-` sign that aren't considered operators\n      // e.g.: 10 + +5 => [10, +, +5]\n      .reduce(function (a, b) {\n        if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n          a[a.length - 1] = b;\n          mergeWithPrevious = true;\n          return a;\n        } else if (mergeWithPrevious) {\n          a[a.length - 1] += b;\n          mergeWithPrevious = false;\n          return a;\n        } else {\n          return a.concat(b);\n        }\n      }, []) // Here we convert the string values into number values (in px)\n      .map(function (str) {\n        return toValue(str, measurement, popperOffsets, referenceOffsets);\n      });\n    }); // Loop trough the offsets arrays and execute the operations\n\n    ops.forEach(function (op, index) {\n      op.forEach(function (frag, index2) {\n        if (isNumeric(frag)) {\n          offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n        }\n      });\n    });\n    return offsets;\n  }\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @argument {Number|String} options.offset=0\r\n   * The offset value as described in the modifier description\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n\n  function offset(data, _ref) {\n    var offset = _ref.offset;\n    var placement = data.placement,\n        _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var basePlacement = placement.split('-')[0];\n    var offsets = void 0;\n\n    if (isNumeric(+offset)) {\n      offsets = [+offset, 0];\n    } else {\n      offsets = parseOffset(offset, popper, reference, basePlacement);\n    }\n\n    if (basePlacement === 'left') {\n      popper.top += offsets[0];\n      popper.left -= offsets[1];\n    } else if (basePlacement === 'right') {\n      popper.top += offsets[0];\n      popper.left += offsets[1];\n    } else if (basePlacement === 'top') {\n      popper.left += offsets[0];\n      popper.top -= offsets[1];\n    } else if (basePlacement === 'bottom') {\n      popper.left += offsets[0];\n      popper.top += offsets[1];\n    }\n\n    data.popper = popper;\n    return data;\n  }\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n\n  function preventOverflow(data, options) {\n    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to\n    // go one step up and use the next offsetParent as reference to\n    // avoid to make this modifier completely useless and look like broken\n\n    if (data.instance.reference === boundariesElement) {\n      boundariesElement = getOffsetParent(boundariesElement);\n    } // NOTE: DOM access here\n    // resets the popper's position so that the document size can be calculated excluding\n    // the size of the popper element itself\n\n\n    var transformProp = getSupportedPropertyName('transform');\n    var popperStyles = data.instance.popper.style; // assignment to help minification\n\n    var top = popperStyles.top,\n        left = popperStyles.left,\n        transform = popperStyles[transformProp];\n    popperStyles.top = '';\n    popperStyles.left = '';\n    popperStyles[transformProp] = '';\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here\n    // restores the original style properties after the offsets have been computed\n\n    popperStyles.top = top;\n    popperStyles.left = left;\n    popperStyles[transformProp] = transform;\n    options.boundaries = boundaries;\n    var order = options.priority;\n    var popper = data.offsets.popper;\n    var check = {\n      primary: function primary(placement) {\n        var value = popper[placement];\n\n        if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n          value = Math.max(popper[placement], boundaries[placement]);\n        }\n\n        return defineProperty({}, placement, value);\n      },\n      secondary: function secondary(placement) {\n        var mainSide = placement === 'right' ? 'left' : 'top';\n        var value = popper[mainSide];\n\n        if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n          value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n        }\n\n        return defineProperty({}, mainSide, value);\n      }\n    };\n    order.forEach(function (placement) {\n      var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n      popper = _extends({}, popper, check[side](placement));\n    });\n    data.offsets.popper = popper;\n    return data;\n  }\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n\n  function shift(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier\n\n    if (shiftvariation) {\n      var _data$offsets = data.offsets,\n          reference = _data$offsets.reference,\n          popper = _data$offsets.popper;\n      var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n      var side = isVertical ? 'left' : 'top';\n      var measurement = isVertical ? 'width' : 'height';\n      var shiftOffsets = {\n        start: defineProperty({}, side, reference[side]),\n        end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n      };\n      data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n    }\n\n    return data;\n  }\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n\n  function hide(data) {\n    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n      return data;\n    }\n\n    var refRect = data.offsets.reference;\n    var bound = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'preventOverflow';\n    }).boundaries;\n\n    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === true) {\n        return data;\n      }\n\n      data.hide = true;\n      data.attributes['x-out-of-boundaries'] = '';\n    } else {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === false) {\n        return data;\n      }\n\n      data.hide = false;\n      data.attributes['x-out-of-boundaries'] = false;\n    }\n\n    return data;\n  }\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n\n\n  function inner(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n    var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n    var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n    data.placement = getOppositePlacement(placement);\n    data.offsets.popper = getClientRect(popper);\n    return data;\n  }\n  /**\r\n   * Modifier function, each modifier can have a function of this type assigned\r\n   * to its `fn` property.<br />\r\n   * These functions will be called on each update, this means that you must\r\n   * make sure they are performant enough to avoid performance bottlenecks.\r\n   *\r\n   * @function ModifierFn\r\n   * @argument {dataObject} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {dataObject} The data object, properly modified\r\n   */\n\n  /**\r\n   * Modifiers are plugins used to alter the behavior of your poppers.<br />\r\n   * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\r\n   * needed by the library.\r\n   *\r\n   * Usually you don't want to override the `order`, `fn` and `onLoad` props.\r\n   * All the other properties are configurations that could be tweaked.\r\n   * @namespace modifiers\r\n   */\n\n\n  var modifiers = {\n    /**\r\n     * Modifier used to shift the popper on the start or end of its reference\r\n     * element.<br />\r\n     * It will read the variation of the `placement` property.<br />\r\n     * It can be one either `-end` or `-start`.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    shift: {\n      /** @prop {number} order=100 - Index used to define the order of execution */\n      order: 100,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: shift\n    },\n\n    /**\r\n     * The `offset` modifier can shift your popper on both its axis.\r\n     *\r\n     * It accepts the following units:\r\n     * - `px` or unit-less, interpreted as pixels\r\n     * - `%` or `%r`, percentage relative to the length of the reference element\r\n     * - `%p`, percentage relative to the length of the popper element\r\n     * - `vw`, CSS viewport width unit\r\n     * - `vh`, CSS viewport height unit\r\n     *\r\n     * For length is intended the main axis relative to the placement of the popper.<br />\r\n     * This means that if the placement is `top` or `bottom`, the length will be the\r\n     * `width`. In case of `left` or `right`, it will be the `height`.\r\n     *\r\n     * You can provide a single value (as `Number` or `String`), or a pair of values\r\n     * as `String` divided by a comma or one (or more) white spaces.<br />\r\n     * The latter is a deprecated method because it leads to confusion and will be\r\n     * removed in v2.<br />\r\n     * Additionally, it accepts additions and subtractions between different units.\r\n     * Note that multiplications and divisions aren't supported.\r\n     *\r\n     * Valid examples are:\r\n     * ```\r\n     * 10\r\n     * '10%'\r\n     * '10, 10'\r\n     * '10%, 10'\r\n     * '10 + 10%'\r\n     * '10 - 5vh + 3%'\r\n     * '-10px + 5vh, 5px - 6%'\r\n     * ```\r\n     * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\r\n     * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\r\n     * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    offset: {\n      /** @prop {number} order=200 - Index used to define the order of execution */\n      order: 200,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: offset,\n\n      /** @prop {Number|String} offset=0\r\n       * The offset value as described in the modifier description\r\n       */\n      offset: 0\n    },\n\n    /**\r\n     * Modifier used to prevent the popper from being positioned outside the boundary.\r\n     *\r\n     * A scenario exists where the reference itself is not within the boundaries.<br />\r\n     * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\r\n     * In this case we need to decide whether the popper should either:\r\n     *\r\n     * - detach from the reference and remain \"trapped\" in the boundaries, or\r\n     * - if it should ignore the boundary and \"escape with its reference\"\r\n     *\r\n     * When `escapeWithReference` is set to`true` and reference is completely\r\n     * outside its boundaries, the popper will overflow (or completely leave)\r\n     * the boundaries in order to remain attached to the edge of the reference.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    preventOverflow: {\n      /** @prop {number} order=300 - Index used to define the order of execution */\n      order: 300,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: preventOverflow,\n\n      /**\r\n       * @prop {Array} [priority=['left','right','top','bottom']]\r\n       * Popper will try to prevent overflow following these priorities by default,\r\n       * then, it could overflow on the left and on top of the `boundariesElement`\r\n       */\n      priority: ['left', 'right', 'top', 'bottom'],\n\n      /**\r\n       * @prop {number} padding=5\r\n       * Amount of pixel used to define a minimum distance between the boundaries\r\n       * and the popper. This makes sure the popper always has a little padding\r\n       * between the edges of its container\r\n       */\n      padding: 5,\n\n      /**\r\n       * @prop {String|HTMLElement} boundariesElement='scrollParent'\r\n       * Boundaries used by the modifier. Can be `scrollParent`, `window`,\r\n       * `viewport` or any DOM element.\r\n       */\n      boundariesElement: 'scrollParent'\n    },\n\n    /**\r\n     * Modifier used to make sure the reference and its popper stay near each other\r\n     * without leaving any gap between the two. Especially useful when the arrow is\r\n     * enabled and you want to ensure that it points to its reference element.\r\n     * It cares only about the first axis. You can still have poppers with margin\r\n     * between the popper and its reference element.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    keepTogether: {\n      /** @prop {number} order=400 - Index used to define the order of execution */\n      order: 400,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: keepTogether\n    },\n\n    /**\r\n     * This modifier is used to move the `arrowElement` of the popper to make\r\n     * sure it is positioned between the reference element and its popper element.\r\n     * It will read the outer size of the `arrowElement` node to detect how many\r\n     * pixels of conjunction are needed.\r\n     *\r\n     * It has no effect if no `arrowElement` is provided.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    arrow: {\n      /** @prop {number} order=500 - Index used to define the order of execution */\n      order: 500,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: arrow,\n\n      /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n      element: '[x-arrow]'\n    },\n\n    /**\r\n     * Modifier used to flip the popper's placement when it starts to overlap its\r\n     * reference element.\r\n     *\r\n     * Requires the `preventOverflow` modifier before it in order to work.\r\n     *\r\n     * **NOTE:** this modifier will interrupt the current update cycle and will\r\n     * restart it if it detects the need to flip the placement.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    flip: {\n      /** @prop {number} order=600 - Index used to define the order of execution */\n      order: 600,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: flip,\n\n      /**\r\n       * @prop {String|Array} behavior='flip'\r\n       * The behavior used to change the popper's placement. It can be one of\r\n       * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\r\n       * placements (with optional variations)\r\n       */\n      behavior: 'flip',\n\n      /**\r\n       * @prop {number} padding=5\r\n       * The popper will flip if it hits the edges of the `boundariesElement`\r\n       */\n      padding: 5,\n\n      /**\r\n       * @prop {String|HTMLElement} boundariesElement='viewport'\r\n       * The element which will define the boundaries of the popper position.\r\n       * The popper will never be placed outside of the defined boundaries\r\n       * (except if `keepTogether` is enabled)\r\n       */\n      boundariesElement: 'viewport',\n\n      /**\r\n       * @prop {Boolean} flipVariations=false\r\n       * The popper will switch placement variation between `-start` and `-end` when\r\n       * the reference element overlaps its boundaries.\r\n       *\r\n       * The original placement should have a set variation.\r\n       */\n      flipVariations: false,\n\n      /**\r\n       * @prop {Boolean} flipVariationsByContent=false\r\n       * The popper will switch placement variation between `-start` and `-end` when\r\n       * the popper element overlaps its reference boundaries.\r\n       *\r\n       * The original placement should have a set variation.\r\n       */\n      flipVariationsByContent: false\n    },\n\n    /**\r\n     * Modifier used to make the popper flow toward the inner of the reference element.\r\n     * By default, when this modifier is disabled, the popper will be placed outside\r\n     * the reference element.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    inner: {\n      /** @prop {number} order=700 - Index used to define the order of execution */\n      order: 700,\n\n      /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n      enabled: false,\n\n      /** @prop {ModifierFn} */\n      fn: inner\n    },\n\n    /**\r\n     * Modifier used to hide the popper when its reference element is outside of the\r\n     * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\r\n     * be used to hide with a CSS selector the popper when its reference is\r\n     * out of boundaries.\r\n     *\r\n     * Requires the `preventOverflow` modifier before it in order to work.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    hide: {\n      /** @prop {number} order=800 - Index used to define the order of execution */\n      order: 800,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: hide\n    },\n\n    /**\r\n     * Computes the style that will be applied to the popper element to gets\r\n     * properly positioned.\r\n     *\r\n     * Note that this modifier will not touch the DOM, it just prepares the styles\r\n     * so that `applyStyle` modifier can apply it. This separation is useful\r\n     * in case you need to replace `applyStyle` with a custom implementation.\r\n     *\r\n     * This modifier has `850` as `order` value to maintain backward compatibility\r\n     * with previous versions of Popper.js. Expect the modifiers ordering method\r\n     * to change in future major versions of the library.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    computeStyle: {\n      /** @prop {number} order=850 - Index used to define the order of execution */\n      order: 850,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: computeStyle,\n\n      /**\r\n       * @prop {Boolean} gpuAcceleration=true\r\n       * If true, it uses the CSS 3D transformation to position the popper.\r\n       * Otherwise, it will use the `top` and `left` properties\r\n       */\n      gpuAcceleration: true,\n\n      /**\r\n       * @prop {string} [x='bottom']\r\n       * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\r\n       * Change this if your popper should grow in a direction different from `bottom`\r\n       */\n      x: 'bottom',\n\n      /**\r\n       * @prop {string} [x='left']\r\n       * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\r\n       * Change this if your popper should grow in a direction different from `right`\r\n       */\n      y: 'right'\n    },\n\n    /**\r\n     * Applies the computed styles to the popper element.\r\n     *\r\n     * All the DOM manipulations are limited to this modifier. This is useful in case\r\n     * you want to integrate Popper.js inside a framework or view library and you\r\n     * want to delegate all the DOM manipulations to it.\r\n     *\r\n     * Note that if you disable this modifier, you must make sure the popper element\r\n     * has its position set to `absolute` before Popper.js can do its work!\r\n     *\r\n     * Just disable this modifier and define your own to achieve the desired effect.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    applyStyle: {\n      /** @prop {number} order=900 - Index used to define the order of execution */\n      order: 900,\n\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n\n      /** @prop {ModifierFn} */\n      fn: applyStyle,\n\n      /** @prop {Function} */\n      onLoad: applyStyleOnLoad,\n\n      /**\r\n       * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\r\n       * @prop {Boolean} gpuAcceleration=true\r\n       * If true, it uses the CSS 3D transformation to position the popper.\r\n       * Otherwise, it will use the `top` and `left` properties\r\n       */\n      gpuAcceleration: undefined\n    }\n  };\n  /**\r\n   * The `dataObject` is an object containing all the information used by Popper.js.\r\n   * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\r\n   * @name dataObject\r\n   * @property {Object} data.instance The Popper.js instance\r\n   * @property {String} data.placement Placement applied to popper\r\n   * @property {String} data.originalPlacement Placement originally defined on init\r\n   * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\r\n   * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\r\n   * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\r\n   * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\r\n   * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\r\n   * @property {Object} data.boundaries Offsets of the popper boundaries\r\n   * @property {Object} data.offsets The measurements of popper, reference and arrow elements\r\n   * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\r\n   * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\r\n   * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\r\n   */\n\n  /**\r\n   * Default options provided to Popper.js constructor.<br />\r\n   * These can be overridden using the `options` argument of Popper.js.<br />\r\n   * To override an option, simply pass an object with the same\r\n   * structure of the `options` object, as the 3rd argument. For example:\r\n   * ```\r\n   * new Popper(ref, pop, {\r\n   *   modifiers: {\r\n   *     preventOverflow: { enabled: false }\r\n   *   }\r\n   * })\r\n   * ```\r\n   * @type {Object}\r\n   * @static\r\n   * @memberof Popper\r\n   */\n\n  var Defaults = {\n    /**\r\n     * Popper's placement.\r\n     * @prop {Popper.placements} placement='bottom'\r\n     */\n    placement: 'bottom',\n\n    /**\r\n     * Set this to true if you want popper to position it self in 'fixed' mode\r\n     * @prop {Boolean} positionFixed=false\r\n     */\n    positionFixed: false,\n\n    /**\r\n     * Whether events (resize, scroll) are initially enabled.\r\n     * @prop {Boolean} eventsEnabled=true\r\n     */\n    eventsEnabled: true,\n\n    /**\r\n     * Set to true if you want to automatically remove the popper when\r\n     * you call the `destroy` method.\r\n     * @prop {Boolean} removeOnDestroy=false\r\n     */\n    removeOnDestroy: false,\n\n    /**\r\n     * Callback called when the popper is created.<br />\r\n     * By default, it is set to no-op.<br />\r\n     * Access Popper.js instance with `data.instance`.\r\n     * @prop {onCreate}\r\n     */\n    onCreate: function onCreate() {},\n\n    /**\r\n     * Callback called when the popper is updated. This callback is not called\r\n     * on the initialization/creation of the popper, but only on subsequent\r\n     * updates.<br />\r\n     * By default, it is set to no-op.<br />\r\n     * Access Popper.js instance with `data.instance`.\r\n     * @prop {onUpdate}\r\n     */\n    onUpdate: function onUpdate() {},\n\n    /**\r\n     * List of modifiers used to modify the offsets before they are applied to the popper.\r\n     * They provide most of the functionalities of Popper.js.\r\n     * @prop {modifiers}\r\n     */\n    modifiers: modifiers\n  };\n  /**\r\n   * @callback onCreate\r\n   * @param {dataObject} data\r\n   */\n\n  /**\r\n   * @callback onUpdate\r\n   * @param {dataObject} data\r\n   */\n  // Utils\n  // Methods\n\n  var Popper = function () {\n    /**\r\n     * Creates a new Popper.js instance.\r\n     * @class Popper\r\n     * @param {Element|referenceObject} reference - The reference element used to position the popper\r\n     * @param {Element} popper - The HTML / XML element used as the popper\r\n     * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\r\n     * @return {Object} instance - The generated Popper.js instance\r\n     */\n    function Popper(reference, popper) {\n      var _this = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      classCallCheck(this, Popper);\n\n      this.scheduleUpdate = function () {\n        return requestAnimationFrame(_this.update);\n      }; // make update() debounced, so that it only runs at most once-per-tick\n\n\n      this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it\n\n      this.options = _extends({}, Popper.Defaults, options); // init state\n\n      this.state = {\n        isDestroyed: false,\n        isCreated: false,\n        scrollParents: []\n      }; // get reference and popper elements (allow jQuery wrappers)\n\n      this.reference = reference && reference.jquery ? reference[0] : reference;\n      this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options\n\n      this.options.modifiers = {};\n      Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n        _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n      }); // Refactoring modifiers' list (Object => Array)\n\n      this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n        return _extends({\n          name: name\n        }, _this.options.modifiers[name]);\n      }) // sort the modifiers by order\n      .sort(function (a, b) {\n        return a.order - b.order;\n      }); // modifiers have the ability to execute arbitrary code when Popper.js get inited\n      // such code is executed in the same order of its modifier\n      // they could add new properties to their options configuration\n      // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n\n      this.modifiers.forEach(function (modifierOptions) {\n        if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n          modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n        }\n      }); // fire the first update to position the popper in the right place\n\n      this.update();\n      var eventsEnabled = this.options.eventsEnabled;\n\n      if (eventsEnabled) {\n        // setup event listeners, they will take care of update the position in specific situations\n        this.enableEventListeners();\n      }\n\n      this.state.eventsEnabled = eventsEnabled;\n    } // We can't use class properties because they don't get listed in the\n    // class prototype and break stuff like Sinon stubs\n\n\n    createClass(Popper, [{\n      key: 'update',\n      value: function update$$1() {\n        return update.call(this);\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy$$1() {\n        return destroy.call(this);\n      }\n    }, {\n      key: 'enableEventListeners',\n      value: function enableEventListeners$$1() {\n        return enableEventListeners.call(this);\n      }\n    }, {\n      key: 'disableEventListeners',\n      value: function disableEventListeners$$1() {\n        return disableEventListeners.call(this);\n      }\n      /**\r\n       * Schedules an update. It will run on the next UI update available.\r\n       * @method scheduleUpdate\r\n       * @memberof Popper\r\n       */\n\n      /**\r\n       * Collection of utilities useful when writing custom modifiers.\r\n       * Starting from version 1.7, this method is available only if you\r\n       * include `popper-utils.js` before `popper.js`.\r\n       *\r\n       * **DEPRECATION**: This way to access PopperUtils is deprecated\r\n       * and will be removed in v2! Use the PopperUtils module directly instead.\r\n       * Due to the high instability of the methods contained in Utils, we can't\r\n       * guarantee them to follow semver. Use them at your own risk!\r\n       * @static\r\n       * @private\r\n       * @type {Object}\r\n       * @deprecated since version 1.8\r\n       * @member Utils\r\n       * @memberof Popper\r\n       */\n\n    }]);\n    return Popper;\n  }();\n  /**\r\n   * The `referenceObject` is an object that provides an interface compatible with Popper.js\r\n   * and lets you use it as replacement of a real DOM node.<br />\r\n   * You can use this method to position a popper relatively to a set of coordinates\r\n   * in case you don't have a DOM node to use as reference.\r\n   *\r\n   * ```\r\n   * new Popper(referenceObject, popperNode);\r\n   * ```\r\n   *\r\n   * NB: This feature isn't supported in Internet Explorer 10.\r\n   * @name referenceObject\r\n   * @property {Function} data.getBoundingClientRect\r\n   * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\r\n   * @property {number} data.clientWidth\r\n   * An ES6 getter that will return the width of the virtual reference element.\r\n   * @property {number} data.clientHeight\r\n   * An ES6 getter that will return the height of the virtual reference element.\r\n   */\n\n\n  Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n  Popper.placements = placements;\n  Popper.Defaults = Defaults;\n  return Popper;\n});"]}